#!/usr/bin/env python
import os
import time
import sys

from utils import SkimTreeBuilder


def parse_command_line(argv):
    """Parse the command line for the configuration file.
    """
    if argv is None:
        argv = sys.argv
    if len(argv) < 2:
        raise RuntimeError('No configuration file provided')
    else:
        config_file = os.path.basename(sys.argv[1])
        module_name, _ = os.path.splitext(config_file)
        try:
            config = __import__(module_name, globals(), locals(), [])
        except ImportError:
            raise
        return config


def main(argv=None):
    sys.dont_write_bytecode=True
    config = parse_command_line(argv)
    skim_tree_builder = SkimTreeBuilder(config.input_pattern, config.destination)
    for input_token in config.input_tokens:
        start = time.time()
        skim_tree_builder.run(input_token, config.additional_branches)
        end = time.time()
        print 'Finished building skimmed tree for {0} in {1:.2f}s'.format(input_token, end - start)


if __name__ == '__main__':

    status = main()
    sys.exit(status)

